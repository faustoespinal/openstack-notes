heat_template_version: newton
description: >
  This template defines the startup of 1 k8s-node capable of serving
  as either a kubernetes master-node or minion-node.
parameters:
  master_name:
    type: string
    default: k8s-master
  key_name:
    type: string
    default: k8s-keypair
  flavor:
    type: string
    default: m1.medium
  image:
    type: string
    default: centos-7
  floating_ip:
    type: string
    default: 192.168.2.211
  security_group:
    type: string
    default: k8s-sg
  ext_network:
    type: string
    default: external_network1
  network:
    type: string
    default: k8s_network
  private_subnet:
    type: string
    default: k8s_network_subnet
resources:
  k8s_cfg:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        chpasswd:
          list: |
            centos:kubernetes
          expire: False
        write_files:
        - content:  | 
                #!/bin/bash
                echo 'kubeadm-master setup....'
                echo '   Make sure to provide internal IP address of master node as argument!!'
                source ~centos/.bashrc
                systemctl restart docker kubelet
                kubeadm init --apiserver-advertise-address=k8s-master --skip-preflight-checks --token 611ca5.0b5130606eb94045 --token-ttl 0 --apiserver-cert-extra-sans="127.0.0.1,192.168.2.215,$1"
                echo 'done...'
          path: /root/kubeadm-master.sh        
        - content:  | 
                #!/bin/bash
                echo 'kubeadm-minion setup....'
                echo '   make sure you provide master internal IP address as argument!!!'
                source ~centos/.bashrc
                systemctl restart docker kubelet
                kubeadm join --skip-preflight-checks --token 611ca5.0b5130606eb94045 $1:6443
                echo 'done...'
          path: /root/kubeadm-minion.sh        
        - content:  | 
                #!/bin/bash
                echo 'post-kubeadm setup....'
                mkdir -p $HOME/.kube
                sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
                sudo chown $(id -u):$(id -g) $HOME/.kube/config
                kubectl get nodes
                kubectl get pods --all-namespaces
                kubectl apply --filename https://git.io/weave-kube-1.6
                echo 'done...'
          path: /home/centos/post-kubeadm.sh
        - content:  |
                [kubernetes]
                name=Kubernetes
                baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
                enabled=1
                sslverify=0
                gpgcheck=1
                repo_gpgcheck=1
                gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
                        https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
          path: /etc/yum.repos.d/kubernetes.repo
        - content:  | 
                -----BEGIN RSA PRIVATE KEY-----
                MIIEowIBAAKCAQEAsjKwuzQysyCdE509caF0XIxjA3+jmew5qbxnyAY3Hs3ZTXyX
                TnRJB16wXozhe5TXL1ry9jf/WoUde85T2k3KOi8W4aoeLMzchZy4IIgHTIcMlKHI
                h8aOnNyQVs7BtvcAgMrklG/VgoF6VyA6GxwsDc/GfLosqlj/HOYizhzsbUOkv1hs
                ytIBsrfH+z/IIP0Mkomlgsm41XMpiTTTdHvzw81WtGCk6oD6aOsFkDZbbi9/KfX8
                mHb3LDh5U2nLRDyGXIxcgSypOSuoAw/5DDZ/9cejqkBw7JpgsOUDxJo6JOwS2QcG
                FMQxoDPDyUVCzrVx66xozb1VLiiymAEuXN2ZLwIDAQABAoIBAAVL9GzcFFW2tnSK
                y/TAs9C8a4UDGj3NA7nD2+HaLXFA9SCUf3rZggIyElP9JAakWfESZv5ik7iBFGtF
                qsBmZ4hrNebnQ5ZZUIS4L9Dnui/QI9OXK3q9sCeBdtjdtGxX0zAA1+KBoHsMljJY
                xuFfaP/QGTpD3mgB1TNqs8YknfJxb5VB2CZOcPQtU+ssRcZk/3l6480S1rcjk3eL
                2ccW55MQe3x4ybJ392+ALA7qUZDheSYebM4/0Be8ZlWVANhjL8Y4SUy3xoEKD6xB
                /Cs0mw6cGcuAb7uyO9u7TELjzFU8aDe2qRwNgFW3HbMB8fObRbTRYPXi8iSJ40SP
                bsFtwSECgYEA2RbbrrbJCpS2V4fr9RfJdAdY/5mtlJeNLGCrRttTzf8r6AAfk1MH
                Gg0g9vPh4MuE6HkbLyOS17bRKTHdGLnN/f1St4l/qmnOM9vv1bhLLB62s0AqKAk5
                UXRglLl+iSf+Sq77Z/DTZgn2AWFNIfQsV6iuek+GrSA2bWY+S8XRjusCgYEA0iNO
                TIOpZByniZ3hoUXQhlhqTZpwRq0J6uAVunh5zTJ804HBC+g10KiWmYG7+OaajUhN
                ihUja71a81poog/ydDY3FEbpBg/ypk/o4wo5Wsbhk2xsEaz6FlZiyr9nfVYx7XiE
                ab4kyQ++GWNI9H5iB9n6iz0LBbDmNJO0yDGGtc0CgYEAuVbal39WhMISKwjQWp/E
                Tls3kIETwRjiXlDp6cS299gzFA+G5bCtD4DF9BCjd9hJ0HAU1Vn5tFFQoWsA6Gs5
                gu8T/75UUJmkgoHzcPO2uiQ+tyrA0w2M8g35pv/3GAIdCIX7/fGNikBW1zbLM4HT
                mcNZsvLSeFxYG25/IRHyp6ECgYBPmvZfgAUcmspRFNFT4fnD2xyyN05PR+AY7Tju
                AhPKS1UEXwQ9uYMhf6xFjOMjwGBOI1TUeXuIphwdUmOO+VGU+rDU6qP+Gu6GWIFV
                +RqPLAZqbclmzMuUyLb2LZpL3epeFqi60kBnNqKCRZ1uma4TYV1LgB17027x/f6f
                VDu/BQKBgEeXGYKtOdN5wYyBV5EnpHVxUjJkYYJJjpGdyd9aDbkc0ysXxyjBT1vR
                Z9YrqolTOzG6fbinFn3i/h4JSIz5XRd07PbN2X4A2UywXckOSlIwEI6chpI29/g7
                Rp9CDHDY9H7qPS81N0myLxr6Z6x7q7Gg+THgS4Ayy//9B3wj77jC
                -----END RSA PRIVATE KEY-----
          path: /home/centos/k8s-keypair.pem
        runcmd:
        - [ ls, -l, / ]
        - [ sh, -xc, "echo $(date) ': hello k8s-vm!'" ]
        - [ sh, -c, echo "=========hello k8s-vm'=========" ]
        - ls -l /root
        - echo "$(ip addr show eth0 | grep 'inet ' | awk '{ print $2}' | awk -F '/' '{ print $1}')" > /home/centos/ipaddr.txt
        - sudo printf "$(cat /home/centos/ipaddr.txt)       $HOSTNAME\n" >> /etc/hosts
        - printf "# Source global definitions\nif [ -f /etc/bashrc ]; then\n   . /etc/bashrc\nfi" > /home/centos/.bashrc
        - printf "\nDNS1=8.8.8.8\nDNS2=8.8.4.4\n" >> /etc/sysconfig/network-scripts/ifcfg-eth0
        - sudo chown centos /home/centos
        - sudo chgrp centos /home/centos
        - sudo chown centos /home/centos/.bashrc
        - sudo chgrp centos /home/centos/.bashrc
        - sudo cp /home/centos/.bashrc /home/centos/.bash_profile 
        - sudo service network restart
        - sudo systemctl stop firewalld
        - sudo systemctl disable firewalld
        - sudo yum -y update
        - sudo yum -y install git
        - sudo sudo setenforce 0
        - sudo yum --enablerepo=kubernetes clean metadata
        - sudo yum install -y docker kubelet kubeadm kubectl 
        - sudo systemctl enable kubelet 
        - systemctl start kubelet
        - sudo systemctl stop firewalld
        - sudo systemctl disable firewalld
        - sudo systemctl enable docker
        - sudo systemctl restart docker
        - cd /home/centos
        - chmod 600 /home/centos/k8s-keypair.pem
        - chown centos /home/centos/k8s-keypair.pem
        - chmod +x  /home/centos/post-kubeadm.sh
        - chmod +x  /root/kubeadm-master.sh
        - chmod +x  /root/kubeadm-minion.sh
        - git clone https://github.com/faustoespinal/openstack-notes.git
        - sudo echo "FINISHED kubeadm NODE CONFIGURATION !!!!!"
  k8s_master:
    type: OS::Nova::Server
    properties:
      admin_pass: k8s
      flavor: {get_param: flavor}
      image: {get_param: image}
      key_name: {get_param: key_name}
      name: {get_param: master_name}
      user_data_format: RAW
      user_data:
        get_resource: k8s_cfg
      networks:
        - port: { get_resource: k8s_master_port }
  k8s_master_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: network }
      fixed_ips:
        - subnet_id: { get_param: private_subnet }
      security_groups: 
        - { get_param: security_group }
  k8s_master_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: ext_network }
      floating_ip_address: { get_param: floating_ip }
      port_id: { get_resource: k8s_master_port }
  k8s_minion1_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: network }
      fixed_ips:
        - subnet_id: { get_param: private_subnet }
      security_groups: 
        - { get_param: security_group }
  k8s_minion_1:
    type: OS::Nova::Server
    properties:
      admin_pass: k8s
      flavor: {get_param: flavor}
      image: {get_param: image}
      key_name: {get_param: key_name}
      name: k8s-minion-1
      user_data_format: RAW
      user_data:
        get_resource: k8s_cfg
      networks:
        - port: { get_resource: k8s_minion1_port }
  k8s_minion2_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: network }
      fixed_ips:
        - subnet_id: { get_param: private_subnet }
      security_groups: 
        - { get_param: security_group }
  k8s_minion_2:
    type: OS::Nova::Server
    properties:
      admin_pass: k8s
      flavor: {get_param: flavor}
      image: {get_param: image}
      key_name: {get_param: key_name}
      name: k8s-minion-2
      user_data_format: RAW
      user_data:
        get_resource: k8s_cfg
      networks:
        - port: { get_resource: k8s_minion2_port }
  k8s_minion3_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: network }
      fixed_ips:
        - subnet_id: { get_param: private_subnet }
      security_groups: 
        - { get_param: security_group }
  k8s_minion_3:
    type: OS::Nova::Server
    properties:
      admin_pass: k8s
      flavor: {get_param: flavor}
      image: {get_param: image}
      key_name: {get_param: key_name}
      name: k8s-minion-3
      user_data_format: RAW
      user_data:
        get_resource: k8s_cfg
      networks:
        - port: { get_resource: k8s_minion3_port }
  k8s_minion4_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: network }
      fixed_ips:
        - subnet_id: { get_param: private_subnet }
      security_groups: 
        - { get_param: security_group }
  k8s_minion_4:
    type: OS::Nova::Server
    properties:
      admin_pass: k8s
      flavor: {get_param: flavor}
      image: {get_param: image}
      key_name: {get_param: key_name}
      name: k8s-minion-4
      user_data_format: RAW
      user_data:
        get_resource: k8s_cfg
      networks:
        - port: { get_resource: k8s_minion4_port }
  k8s_minion5_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: network }
      fixed_ips:
        - subnet_id: { get_param: private_subnet }
      security_groups: 
        - { get_param: security_group }
  k8s_minion_5:
    type: OS::Nova::Server
    properties:
      admin_pass: k8s
      flavor: {get_param: flavor}
      image: {get_param: image}
      key_name: {get_param: key_name}
      name: k8s-minion-5
      user_data_format: RAW
      user_data:
        get_resource: k8s_cfg
      networks:
        - port: { get_resource: k8s_minion5_port }
outputs:
  k8s_master_private_ip:
    description: IP address of k8s_master in private network
    value: { get_attr: [ k8s_master, first_address ] }
  k8s_master_public_ip:
    description: Floating IP address of k8s_master in public network
    value: { get_attr: [ k8s_master_floating_ip, floating_ip_address ] }
